const mongoose = require("mongoose");
module.exports = {
    DateTimeStamp: { type: Date, default: Date.now },
    Versionstamp: { type: String, default: '1.0.0.0', maxLength:30 },
    LIMSDateTimeStamp: { type: Date, default: Date.now },
    LIMSVersionstamp: { type: String, default: '1.0.0.0', maxLength:30 },
    RequestID: { type: String, required:true, index: true, maxLength:26 },
    OBRSetID: { type: Number, required:true, index: true },
    LOINCPanelCode: { type: String, maxLength:10 },
    LIMSPanelCode: { type: String, maxLength:10 },
    LIMSPanelDesc: { type: String, maxLength:50 },
    HL7PriorityCode: { type: String, maxLength:1 },
    SpecimenDateTime: { type: Date },
    RegisteredDateTime: { type: Date },
    ReceivedDateTime: { type: Date },
    AnalysisDateTime: { type: Date },
    AuthorisedDateTime: { type: Date },
    AdmitAttendDateTime: { type: Date },
    CollectionVolume: { type: mongoose.Schema.Types.Decimal128 },
    RequestingFacilityCode: { type: String, maxLength:15 },
    ReceivingFacilityCode: { type: String, maxLength:10 },
    LIMSPointOfCareDesc: { type: String, maxLength:50 },
    RequestTypeCode: { type: String, maxLength:3 },
    ICD10ClinicalInfoCodes: { type: String, maxLength:50 },
    ClinicalInfo: { type: String, maxLength:250 },
    HL7SpecimenSourceCode: { type: String, maxLength:10 },
    LIMSSpecimenSourceCode: { type: String, maxLength:10 },
    LIMSSpecimenSourceDesc: { type: String, maxLength:50 },
    HL7SpecimenSiteCode: { type: String, maxLength:10 },
    LIMSSpecimenSiteCode: { type: String, maxLength:10 },
    LIMSSpecimenSiteDesc: { type: String, maxLength:50 },
    WorkUnits: { type: mongoose.Schema.Types.Decimal128 },
    CostUnits: { type: mongoose.Schema.Types.Decimal128 },
    HL7SectionCode: { type: String, maxLength:3 },
    HL7ResultStatusCode: { type: String, maxLength:1 },
    RegisteredBy: { type: String, maxLength:250 },
    TestedBy: { type: String, maxLength:250 },
    AuthorisedBy: { type: String, maxLength:250 },
    OrderingNotes: { type: String, maxLength:250 },
    EncryptedPatientID: { type: String, maxLength:250 },
    AgeInYears: { type: Number },
    AgeInDays: { type: Number },
    HL7SexCode: { type: String, maxLength:1 },
    HL7EthnicGroupCode: { type: String, maxLength:3 },
    Deceased: { type: Boolean },
    Newborn: { type: Boolean },
    HL7PatientClassCode: { type: String, maxLength:1 },
    AttendingDoctor: { type: String, maxLength:50 },
    TestingFacilityCode: { type: String, maxLength:10 },
    ReferringRequestID: { type: String, maxLength:25 },
    Therapy: { type: String, maxLength:250 },
    LIMSAnalyzerCode: { type: String, maxLength:10 },
    TargetTimeDays: { type: Number },
    TargetTimeMins: { type: Number },
    LIMSRejectionCode: { type: String, maxLength:10 },
    LIMSRejectionDesc: { type: String, maxLength:250 },
    LIMSFacilityCode: { type: String, maxLength:15 },
    Repeated: { type: Number },
    LIMSPreReg_RegistrationDateTime: { type: Date },
    LIMSPreReg_ReceivedDateTime: { type: Date },
    LIMSPreReg_RegistrationFacilityCode: { type: String, maxLength:15 },
    LIMSVendorCode: { type: String, maxLength:4 },
    Results: [{
                type: mongoose.Schema.Types.ObjectId,
                ref: "results"
            }],
    Monitoring: [{
                type: mongoose.Schema.Types.ObjectId,
                ref: "monitorings"
            }]
};